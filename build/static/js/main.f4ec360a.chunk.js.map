{"version":3,"sources":["Components/MessageForm.js","Components/MyMessage.js","Components/TheirMessage.js","Components/chatfeed.jsx","Components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRigth","color","backgroundColor","TheirMessage","lastMessage","isFirstMessagebyUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","console","log","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","uername","keys","Object","key","lastMessageKey","width","marginRight","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4ec360a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { sendMessage, isTyping } from \"react-chat-engine\";\r\nimport {SendOutlined, PictureOutlined} from '@ant-design/icons'\r\n\r\n\r\nconst MessageForm = (props) =>{\r\n\r\n    const [value, setValue] = useState('')\r\n    const {chatId, creds} = props;\r\n\r\n    const handleSubmit = (event) =>{\r\n        event.preventDefault();\r\n\r\n        const text = value.trim();\r\n        \r\n        if(text.length > 0) sendMessage(creds, chatId, {text})\r\n\r\n        setValue('');\r\n    }\r\n\r\n    const handleChange = (event) =>{\r\n        setValue(event.target.value)\r\n\r\n        isTyping(props, chatId);\r\n    }\r\n\r\n    const handleUpload = (event) =>{\r\n        sendMessage(creds, chatId, {files: event.target.files, text: ''})        \r\n    }\r\n\r\n    return(\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input \r\n                className=\"message-input\"\r\n                placeholder=\"send a message...\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined className=\"picture-icon\"/>\r\n                </span>\r\n            </label> \r\n            <input \r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{display: 'none'}}\r\n                onChange={handleUpload}\r\n            />          \r\n\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\" />\r\n            </button> \r\n        </form>\r\n    );\r\n}\r\n\r\nexport default MessageForm","import React from 'react'\r\n\r\nconst MyMessage = ({message}) => {\r\n    \r\n        if (message.attachments && message.attachments.length > 0){\r\n    \r\n        return(\r\n                <img\r\n                    src={message.attachments[0].file}\r\n                    alt=\"message-attachment\"\r\n                    className=\"message-image\"\r\n                    style={{float: 'right'}}\r\n                />                   \r\n                )\r\n            }\r\n            \r\n            return(\r\n                <div className=\"message\" style={{float: 'right', \r\n                marginRigth: '18px', color: 'white', backgroundColor: '#3B2A50'}}>\r\n                {message.text}\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default MyMessage\r\n\r\n\r\n","import React from \"react\";\r\n\r\n\r\nconst  TheirMessage = ({lastMessage, message}) => {\r\n\r\n    const isFirstMessagebyUser = !lastMessage || lastMessage.sender.username !==message.sender.username;\r\n\r\n    return(\r\n        <div className=\"message-row\">\r\n            {isFirstMessagebyUser && (\r\n                <div className=\"message-avatar\"\r\n                style={{backgroundImage: message.sender &&\r\n                    `url(${message.sender.avatar})`}}\r\n                />\r\n            )}\r\n\r\n            {message.attachments && message.attachments.length > 0\r\n            ? (\r\n                <img\r\n                src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{marginLeft: isFirstMessagebyUser ? '4px' : '48px'}}\r\n                />\r\n            )\r\n\r\n            :  ( <div className=\"message\" style={{float: 'left',\r\n                backgroundColor: 'CABCDC', marginLeft: isFirstMessagebyUser ?\r\n                '4px' : '48px'}}>\r\n                {message.text}\r\n            </div>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TheirMessage\r\n\r\n\r\n","import React from 'react'\r\nimport MessageForm from './MessageForm'\r\nimport MyMessage from './MyMessage'\r\nimport TheirMessage from './TheirMessage'\r\n\r\n\r\nconst ChatFeed = (props) => {\r\n\r\n    console.log(props, \"Chatprops\")\r\n\r\n    const {chats, activeChat, userName, messages} = props\r\n\r\n    const chat = chats ? chats[activeChat] : null\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n       return chat.people.map((person, index) => person.last_read === message.id && (\r\n            <div \r\n                key={`read_${index}`} \r\n                className=\"read-receipt\"\r\n                style={{\r\n                    float: isMyMessage ? 'right' : 'left',\r\n                    backgroundImage: `url(${person?.person?.avatar})`\r\n                }}\r\n            /> \r\n        ))\r\n    }\r\n\r\n    console.log(chat, \"chatgivenProps\", userName, messages)\r\n    console.log(chat,\"chat\");\r\n    console.log(userName, \"userName\");\r\n    console.log(messages,\"messages\");\r\n\r\n    // Add render message function\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages)\r\n        console.log(keys, \"keys for chat\");\r\n\r\n            return keys.map((key, index) => {\r\n                const message = messages[key];\r\n                const lastMessageKey = index === 0 ? null : keys [index-1];\r\n                const isMyMessage = userName === message.sender.username;\r\n\r\n                    return(\r\n                        <div key={`msg ${index}`} style={{width:'100%'}}>\r\n                            <div className=\"message-block\">\r\n                                {isMyMessage\r\n                                ?<MyMessage message={message}/>\r\n                                :<TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\r\n                            </div>\r\n                            <div className=\"read-receipts\" style={{marginRight: isMyMessage ? '18px' : '0px',\r\n                                marginLeft: isMyMessage ? '0px': '68px' }}>\r\n                                {renderReadReceipts(message, isMyMessage)}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n            })\r\n    } \r\n\r\n    \r\n\r\n    return(\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">{chat?.title}</div>\r\n                    <div className=\"chat-subtitle\">\r\n                        {chat?.people.map((person) => `${person.person.uername}`)} \r\n                    </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{height: '100px'}}>\r\n                <div className=\"message-form-container\">\r\n                    <MessageForm {...props} chatId={activeChat}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatFeed\r\n\r\n","import { useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst LoginForm = () =>{\r\n\r\n    const [username, setUsername] = useState('');\r\n\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState('')\r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n\r\n        const authObject = {'Project-ID' : \"a9211898-8017-4cbf-b935-8125250fab70\", 'User-Name': username, 'User-Secret': password}\r\n        \r\n        try{\r\n            //username/password => chatengine -> givemessages\r\n\r\n           await axios.get('https://api.chatengine.io/chats', {headers: authObject});\r\n\r\n                localStorage.setItem('username', username)\r\n                localStorage.setItem('password', password)\r\n\r\n                window.location.reload();\r\n\r\n           // works out -> logged in\r\n           \r\n        }catch(error){\r\n            setError('Oops, incorrect credentials')\r\n            \r\n            // error -> try with new username \r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">Chat Application</h1>\r\n                <form onSubmit={handleSubmit}>      \r\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required/>\r\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"password\" required/>\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\">\r\n                            <span>Start Chatting</span>\r\n                        </button>\r\n                        <h2 className=\"error\">{error}</h2>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default LoginForm","import React from 'react'\nimport ChatFeed from './Components/chatfeed'\nimport './App.css'\nimport {ChatEngine} from 'react-chat-engine'\nimport LoginForm from './Components/LoginForm'\n\n\n\nconst App = () =>{\n    if(!localStorage.getItem('username')) return <LoginForm />\n  return(\n    <div>\n      <ChatEngine\n        height=\"100vh\"\n        projectID=\"a9211898-8017-4cbf-b935-8125250fab70\"\n        userName={localStorage.getItem('username')}\n        userSecret={localStorage.getItem('password')}\n        renderChatFeed = {(chatAppProps) => <ChatFeed {...chatAppProps} />}\n      />\n    </div>\n  )\n}\n\n\nexport default App ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}